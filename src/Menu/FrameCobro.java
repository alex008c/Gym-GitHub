/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Menu;

import java.io.File;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Scanner;
import javax.swing.JOptionPane;

/**
 *
 * @author pedro
 */
public class FrameCobro extends javax.swing.JFrame {
boolean encontrado=false;
boolean crear =false;

double bala=0;
double b=0;
int num;
    /**
     * Creates new form FrameCobro
     */
    public FrameCobro() {
        initComponents();
   
        botonguardar.setEnabled(false);
       // mescobro.setText(FechaActual());
        this.setLocationRelativeTo(null);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        idcobro = new javax.swing.JTextField();
        mescobro = new javax.swing.JTextField();
        clientecobro = new javax.swing.JTextField();
        valorcobro = new javax.swing.JTextField();
        conceptocobro = new javax.swing.JTextField();
        statuscobro = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jlabel99 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jlabel333 = new javax.swing.JLabel();
        botonmenu = new javax.swing.JButton();
        botonguardar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        cpid = new javax.swing.JLabel();
        cpvalor = new javax.swing.JLabel();
        cpcliente = new javax.swing.JLabel();
        cpconcep = new javax.swing.JLabel();
        cpstatus = new javax.swing.JLabel();
        aniocobro = new javax.swing.JTextField();
        cpanio = new javax.swing.JLabel();
        cpmes = new javax.swing.JLabel();
        diacobro = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(25, 25, 25));

        idcobro.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                idcobroComponentAdded(evt);
            }
        });
        idcobro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                idcobroKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                idcobroKeyTyped(evt);
            }
        });

        mescobro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                mescobroKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                mescobroKeyTyped(evt);
            }
        });

        clientecobro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                clientecobroKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                clientecobroKeyTyped(evt);
            }
        });

        valorcobro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                valorcobroKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                valorcobroKeyTyped(evt);
            }
        });

        conceptocobro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                conceptocobroKeyReleased(evt);
            }
        });

        statuscobro.setEditable(false);
        statuscobro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                statuscobroKeyReleased(evt);
            }
        });

        jLabel1.setText("ID COBRO");

        jLabel2.setText("FECHA COBRO");

        jlabel99.setText("ID CLIENTE");

        jLabel4.setText("VALOR COBRO");

        jLabel5.setText("CONCEPTO COBRO");

        jlabel333.setText("STATUS");

        botonmenu.setBackground(new java.awt.Color(0, 0, 0));
        botonmenu.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        botonmenu.setText("MENU");
        botonmenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonmenuActionPerformed(evt);
            }
        });

        botonguardar.setBackground(new java.awt.Color(0, 0, 0));
        botonguardar.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        botonguardar.setText("GUARDAR");
        botonguardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonguardarActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 0, 0));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 0, 0));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 0, 0));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 0, 0));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 0, 0));

        cpid.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        cpid.setForeground(new java.awt.Color(255, 0, 0));

        cpvalor.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        cpvalor.setForeground(new java.awt.Color(255, 0, 0));

        cpcliente.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        cpcliente.setForeground(new java.awt.Color(255, 0, 0));

        cpconcep.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        cpconcep.setForeground(new java.awt.Color(255, 0, 0));

        cpstatus.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        cpstatus.setForeground(new java.awt.Color(255, 0, 0));

        aniocobro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                aniocobroKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                aniocobroKeyTyped(evt);
            }
        });

        cpanio.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        cpanio.setForeground(new java.awt.Color(255, 0, 0));

        cpmes.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        cpmes.setForeground(new java.awt.Color(255, 0, 0));

        diacobro.setEditable(false);
        diacobro.setText("30");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cpstatus)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(botonmenu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(botonguardar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jlabel99, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jlabel333, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cpmes)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(idcobro, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE)
                                    .addComponent(clientecobro)
                                    .addComponent(valorcobro)
                                    .addComponent(conceptocobro)
                                    .addComponent(statuscobro)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(diacobro, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(mescobro, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(aniocobro, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel3)
                                        .addComponent(jLabel9)
                                        .addComponent(jLabel8)
                                        .addComponent(jLabel7)
                                        .addComponent(jLabel6))
                                    .addGap(35, 35, 35)
                                    .addComponent(cpvalor))
                                .addComponent(cpconcep, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(cpcliente, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(cpid, javax.swing.GroupLayout.Alignment.TRAILING))
                            .addComponent(cpanio))))
                .addGap(162, 162, 162))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(idcobro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel6)
                                    .addComponent(cpid))
                                .addGap(29, 29, 29)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(mescobro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2)
                                    .addComponent(botonmenu, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(aniocobro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cpanio)
                                    .addComponent(cpmes)
                                    .addComponent(diacobro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(26, 26, 26)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(clientecobro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3)
                                    .addComponent(cpcliente)))
                            .addComponent(jlabel99))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(valorcobro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel7)
                                    .addComponent(cpvalor))
                                .addGap(32, 32, 32)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(conceptocobro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8)
                                    .addComponent(cpconcep)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(botonguardar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jLabel5))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(statuscobro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel9)
                        .addComponent(cpstatus))
                    .addComponent(jlabel333))
                .addContainerGap(87, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonguardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonguardarActionPerformed
        // TODO add your handling code here:ManejoUsuarios me=new ManejoUsuarios();
       String cor="";
       String id=idcobro.getText();
       String dia=diacobro.getText();
        String an=aniocobro.getText();
        String mes=mescobro.getText();
      
        String cliente=clientecobro.getText();
       double valor=Double.parseDouble(valorcobro.getText());
        valor+=b+bala;
       String concep=conceptocobro.getText();
       boolean stat=false;
      String nuevalinea="";
      ManejoCobrooo me =new ManejoCobrooo();
   
  
        try {

            if (crear==false)
            {
                me.GuardarDatos (id,dia,mes,an, cliente,concep,valor,stat);
            }
            else
            {
                nuevalinea=(id + "; "+dia+"; " + mes+ "; "+an+"; " + cliente + "; " + concep + "; " +valor+"; "+stat);
                me.ModificarDatos(nuevalinea,id);
            }
      
            blanquear();

        } // fin try
        
        catch (Exception e)
        {
            e.printStackTrace();
        }
    }//GEN-LAST:event_botonguardarActionPerformed

    private void idcobroKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_idcobroKeyReleased
        // TODO add your handling code here:
        validar();
        
        boolean encontra=false;

        

        Scanner z;
        
        try {
            
            File g=new File("Cobros.txt");
            
            if(!g.exists())
            {
                
                g.createNewFile();
            }
            z = new Scanner(g);
            //else
            
                while (z.hasNextLine()&& !encontrado)
                {
                    String linea = z.nextLine();

                    Scanner sll = new Scanner(linea);

                    sll.useDelimiter("\\s*;\\s*");
                    try {
                        
                        int idarch=Integer.parseInt(sll.next());
                        if(idarch==num)
                        num+=1;
            idcobro.setText(String.valueOf(num));
                     encontrado=true;
                                }
                    catch (Exception  e1)
                    {
                       System.out.println("Error"+e1);
                       
                    }
                } // fin while
            

            z.close();
        } // fin try
        catch (Exception e)
        {
            JOptionPane.showMessageDialog(null,"Error al leer Archivo " + e);
        }
        
  idcobro.setText(String.valueOf(num));
    }//GEN-LAST:event_idcobroKeyReleased

    private void botonmenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonmenuActionPerformed
        // TODO add your handling code here:
        Menu m=new Menu();
        m.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_botonmenuActionPerformed

    private void clientecobroKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_clientecobroKeyReleased
        // TODO add your handling code here:
        validar();
              int codd;
        boolean encontra=false;

        codd=Integer.parseInt(clientecobro.getText());

        Scanner z;
        
        try {
            
            File g=new File("Cobros.txt");
            
            if(!g.exists())
            {
                
                g.createNewFile();
            }
            z = new Scanner(g);
            //else
            
                while (z.hasNextLine() && !encontra)
                {
                    String linea = z.nextLine();

                    Scanner sll = new Scanner(linea);

                    sll.useDelimiter("\\s*;\\s*");
                    try {
                        int idarch=Integer.parseInt(sll.next());
                        int dia=Integer.parseInt(sll.next());
                        int mes=Integer.parseInt(sll.next());

                        int anio=Integer.parseInt(sll.next());
                        int clie=Integer.parseInt(sll.next());


                        int mess=Integer.parseInt(mescobro.getText());
                        if(mess==mes && codd==clie)
                        {
                            JOptionPane.showMessageDialog(this, "NO SE PUEDEN REALIZAR MAS COBROS");
                            mescobro.setText("");
                            clientecobro.setText("");
                        }
                                    
                        if(codd==clie)
                        {
                            String con=sll.next();
                          b=Double.parseDouble(sll.next());
                          
                         
                            
                            encontra=true;
                            
                        }
                        else
                        {  
                            encontra=false;
                          
                        }
                    } // fin try
                    catch (Exception  e1)
                    {
                       // JOptionPane.showMessageDialog(null,"Error al leer Archivo " + e1);
                       
                    }
                } // fin while
            

            z.close();
        } // fin try
        catch (Exception e)
        {
            JOptionPane.showMessageDialog(null,"Error al leer Archivo " + e);
        }
        int cod;
        boolean encontrado=false;

        cod=Integer.parseInt(clientecobro.getText());

        Scanner s;
        
        try {
            
            File f=new File("Clientes.txt");
            
            if(!f.exists())
            {
                
                f.createNewFile();
            }
            s = new Scanner(f);
            //else
            
                while (s.hasNextLine() && !encontrado)
                {
                    String linea = s.nextLine();

                    Scanner sl = new Scanner(linea);

                    sl.useDelimiter("\\s*;\\s*");
                    try {
                        int idarc=Integer.parseInt(sl.next());
                        if(cod==idarc)
                        {
                   String uno=sl.next();
                    String dos=sl.next();
                     String tres=sl.next();
                      String cuatro=sl.next();
                       String cinco=sl.next();
                        String sic=sl.next();
                         String sev=sl.next();
                          String och=sl.next();
                           String nue=sl.next();
                            String die=sl.next();
                             String onc=sl.next();
                              String doc=sl.next();
                             String k=sl.next();
                                bala=Double.parseDouble(sl.next());
                        
                           
                            
                            encontrado=true;
                           
                            //Satigualinea=(campoid.getText() + "; " + camponombre.getText() + "; " + campoapellido.getText() + "; " + campotel.getText() + "; " + campocorreo.getText());
                            //accion.setText("Modificando...");
                        }
                        else
                        {  //Salida.setText("Este registro no existe");
                     
                     
                          
                          
                            
 
                            encontrado=false;
                           
                           // accion.setText("Creando...");
                        }
                    } // fin try
                    catch (Exception  e1)
                    {
                       // JOptionPane.showMessageDialog(null,"Error al leer Archivo " + e1);
                       
                    }
                } // fin while
            

            s.close();
        } // fin try
        catch (Exception e)
        {
            JOptionPane.showMessageDialog(null,"Error al leer Archivo " + e);
        }

    }//GEN-LAST:event_clientecobroKeyReleased

    private void valorcobroKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_valorcobroKeyReleased
validar();        // TODO add your handling code here:
    }//GEN-LAST:event_valorcobroKeyReleased

    private void conceptocobroKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_conceptocobroKeyReleased
validar();        // TODO add your handling code here:
    }//GEN-LAST:event_conceptocobroKeyReleased

    private void statuscobroKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_statuscobroKeyReleased
validar();        // TODO add your handling code here:
    }//GEN-LAST:event_statuscobroKeyReleased

    private void idcobroKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_idcobroKeyTyped
char c=evt.getKeyChar();
        if(c<'0'|| c>'9')evt.consume();        // TODO add your handling code here:
    }//GEN-LAST:event_idcobroKeyTyped

    private void clientecobroKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_clientecobroKeyTyped
char c=evt.getKeyChar();
        if(c<'0'|| c>'9')evt.consume();         // TODO add your handling code here:
    }//GEN-LAST:event_clientecobroKeyTyped

    private void valorcobroKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_valorcobroKeyTyped
char c=evt.getKeyChar();
        if(c<'0'|| c>'9')evt.consume();         // TODO add your handling code here:
    }//GEN-LAST:event_valorcobroKeyTyped

    private void mescobroKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mescobroKeyReleased
validar();       

       

    }//GEN-LAST:event_mescobroKeyReleased

    private void aniocobroKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_aniocobroKeyReleased
validar();        // TODO add your handling code here:
    }//GEN-LAST:event_aniocobroKeyReleased

    private void mescobroKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mescobroKeyTyped
char c=evt.getKeyChar();
        if(c<'0'|| c>'9')evt.consume();        // TODO add your handling code here:
    }//GEN-LAST:event_mescobroKeyTyped

    private void aniocobroKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_aniocobroKeyTyped
char c=evt.getKeyChar();
        if(c<'0'|| c>'9')evt.consume();        // TODO add your handling code here:
    }//GEN-LAST:event_aniocobroKeyTyped

    private void idcobroComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_idcobroComponentAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_idcobroComponentAdded

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrameCobro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrameCobro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrameCobro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrameCobro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrameCobro().setVisible(true);
            }
        });
    }
            public String FechaActual()
        {
            Date Fecha=new Date();
            SimpleDateFormat formato=new SimpleDateFormat("MM/YYYY");
            return formato.format(Fecha);
        }
            
            public void blanquear()
            {
                idcobro.setText("");
                mescobro.setText("");
                aniocobro.setText("");
                clientecobro.setText("");
                valorcobro.setText("");
                conceptocobro.setText("");
                statuscobro.setText("");
            }
                public void validar(){
      
        if(mescobro.getText().isEmpty())
        {
            cpmes.setText("*");
        }
        else
        {
            cpmes.setText("");
        }
        if(aniocobro.getText().isEmpty())
        {
            cpanio.setText("*");
        }
        else
        {
            cpanio.setText("");
        }
        
        
        
               if(clientecobro.getText().isEmpty())
        {
            cpcliente.setText("*");
        }
        else
        {
            cpcliente.setText("");
        }
          if(valorcobro.getText().isEmpty())
        {
            cpvalor.setText("*");
        }
        else
        {
            cpvalor.setText("");
        }
                 if(conceptocobro.getText().isEmpty())
        {
            cpconcep.setText("*");
        }
        else
        {
            cpconcep.setText("");
        }

  
     
                    
        if(clientecobro.getText().isEmpty() || valorcobro.getText().isEmpty()||conceptocobro.getText().isEmpty()
                ||mescobro.getText().isEmpty()||aniocobro.getText().isEmpty())
        {
            botonguardar.setEnabled(false);
        }
        else
        {
            botonguardar.setEnabled(true);
        }
        
                }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField aniocobro;
    private javax.swing.JButton botonguardar;
    private javax.swing.JButton botonmenu;
    private javax.swing.JTextField clientecobro;
    private javax.swing.JTextField conceptocobro;
    private javax.swing.JLabel cpanio;
    private javax.swing.JLabel cpcliente;
    private javax.swing.JLabel cpconcep;
    private javax.swing.JLabel cpid;
    private javax.swing.JLabel cpmes;
    private javax.swing.JLabel cpstatus;
    private javax.swing.JLabel cpvalor;
    private javax.swing.JTextField diacobro;
    private javax.swing.JTextField idcobro;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jlabel333;
    private javax.swing.JLabel jlabel99;
    private javax.swing.JTextField mescobro;
    private javax.swing.JTextField statuscobro;
    private javax.swing.JTextField valorcobro;
    // End of variables declaration//GEN-END:variables
}
